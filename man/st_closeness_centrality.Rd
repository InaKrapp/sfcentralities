% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/st_closeness_centrality.R
\name{st_closeness_centrality}
\alias{st_closeness_centrality}
\title{Calculate Closeness Centrality in a Street Network}
\usage{
st_closeness_centrality(
  data = NULL,
  graph = NULL,
  placename = NULL,
  transport_mode = NULL,
  batched_if = 1e+05,
  normalized = TRUE
)
}
\arguments{
\item{data}{An `sf` dataframe containing points for which closeness centrality
should be calculated, or a `dodgr_streetnet` graph for which centrality
of all its vertices should be determined.}

\item{graph}{An optional `dodgr_streetnet` graph. If `data` is an `sf` object,
this graph will be used for distance calculations. If `data` is already a
`dodgr_streetnet`, this parameter is ignored. If neither `graph` nor a
`dodgr_streetnet` `data` is provided, a graph will be built using `placename`
and `transport_mode`.}

\item{placename}{A string giving the name of a place from which a street network
should be obtained (e.g., "Hampi, India"). This is used only if `data` is
an `sf` object and `graph` is not supplied.}

\item{transport_mode}{A string specifying the mode of transport (e.g., "foot",
"bicycle", "motorcar"). This is used only if `data` is an `sf` object and
`graph` is not supplied.}

\item{batched_if}{An integer. If the number of vertices in the graph (or points in `data`)
exceeds this number, distance calculations will be performed in batches using
`st_closeness_centrality_largedata`. Set to `100000` by default. This value
should be lowered if memory allocation errors occur.}

\item{normalized}{A logical value. If `TRUE` (default), closeness is normalized
by the number of reachable nodes, representing the mean of distances. If `FALSE`,
it is the inverse of the sum of distances.}
}
\value{
An `sf` dataframe of the input `data` points (or the graph vertices
  if `data` was a `dodgr_streetnet`), with an additional column 'closeness'
  and with CRS "EPSG:4326".
}
\description{
This function determines closeness centrality for either specified points
within a street network or for all vertices of a given street network.
}
\examples{
library(dodgr)
library(sf)

# Example 1: Calculate centrality for all vertices of a dodgr graph
graph_hampi <- dodgr::weight_streetnet(dodgr::hampi, wt_profile = "bicycle")
closeness_all_vertices <- st_closeness_centrality(graph_hampi)
head(closeness_all_vertices)

# Example 2: Find centrality values for specific points, providing a pre-built graph
pts <- sf::st_sfc(sf::st_point(c(76.47398, 15.330)), sf::st_point(c(76.47398, 15.150)))
pts <- sf::st_as_sf(pts)
sf::st_crs(pts) <- "EPSG:4326"

pts_centrality_with_graph <- st_closeness_centrality(pts, graph = graph_hampi)
print(pts_centrality_with_graph)

# Example 3: Find centrality values for specific points, letting the function build the graph
\dontrun{ # This example requires internet access to download OSM data
pts <- sf::st_sfc(sf::st_point(c(76.47398, 15.330)), sf::st_point(c(76.47398, 15.150)))
pts <- sf::st_as_sf(pts_no_id)
sf::st_crs(pts) <- "EPSG:4326"

pts_centrality_build_graph <- st_closeness_centrality(
  pts,
  placename = "Hampi, India",
  transport_mode = "bicycle"
)
print(pts_centrality_build_graph)
}
}
