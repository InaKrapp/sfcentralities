% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/st_network_centrality.R
\name{st_closeness_centrality}
\alias{st_closeness_centrality}
\title{st_network_centrality}
\usage{
st_closeness_centrality(
  data,
  transport_mode = NULL,
  placename = NULL,
  graph = NULL,
  batched_if = 1e+05,
  normalized = TRUE
)
}
\arguments{
\item{data}{A sf dataframe or a dodgr streetnetwork}

\item{transport_mode}{A string. It has to be a valid transport mode. In case the input is a dodgr graph, it will be ignored.}

\item{placename}{A string giving the name of a place from which a streetnetwork should be taken. In case the input is a dodgr graph, it will be ignored.}

\item{graph}{A dodgr graph. It can be supplied and used for distance calculation, or the user supplies a place name and a mode of transport.}

\item{batched_if}{The number of elements in the graph for which distances should be calculated at once. Set to 1000 by default. It is used as a number of rows: For any graph with more rows than this number, distance is calculated in batches. For smaller graphs, it is created at once. As a rule, this number should be lowered if you receive an 'Error: cannot allocate vector of size ... Gb' error.}

\item{normalized}{If the result should be normalized. Unnormalized closeness is the inverse of the sum of distances between points in the dataset, normalized closeness is the mean of distances.}
}
\value{
A sf dataframe of the points in 'data', with a column 'closeness' and the crs "EPSG:4326".
}
\description{
This function determines closeness centrality in a street network.
}
\examples{
# The simplest example calculates the closeness of points within a network/graph:
library(dodgr)
graph = dodgr::weight_streetnet(dodgr::hampi, wt_profile = "bicycle")
closeness <- st_closeness_centrality(graph)
# Probably more common may be to find centrality values for specific points:
graph = dodgr::weight_streetnet(dodgr::hampi, wt_profile = "bicycle")
pts <- sf::st_sfc(sf::st_point(c(76.47398, 15.330)), sf::st_point(c(76.47398, 15.150)))
pts <- sf::st_as_sf(pts)
sf::st_crs(pts) <- "EPSG:4326"
sf::st_geometry(pts) <- "geom"
pts$name = c("city center", "train station")
pts <- st_closeness_centrality(pts, graph = graph)
}
